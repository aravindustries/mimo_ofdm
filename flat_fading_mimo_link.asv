clear;
close all;
clc;

M = 16;
total_bits = 100;
data = randi([0 M-1],[2,total_bits/2]);

snr_db = linspace(0,30,15);
snr = 10.^(snr_db/10);
N0 = 1./snr; % for unit average power this is the noise power

H1 = [ 0.7 + 0.7j,  0.3 - 0.3j;
      -0.3 + 0.3j,  0.7 - 0.7j ];

H2 = [ 0.7 + 0.7j,  0.72 + 0.68j;
       0.7 - 0.7j,  0.68 - 0.72j ];

H3 = [ 0.9 + 0.1j,  0.85 + 0.15j;
       0.85 - 0.15j, 0.9 - 0.1j ];

rx_pc = precoding(data, M, H1, N0(6));
%rx_zf = zero_forcing(data, M, H1, N0(6));
%rx_lm = linear_mmse(data, M, H1, N0(6));

disp(data);
disp(rx_pc);
ber = sum(data ~= rx_pc, "all")/total_bits;
disp(ber);
%disp(rx_zf);
%disp(rx_lm);

num_iter = 10;

ber_pc = zeros(num_iter, length(N0));
ber_zf = zeros(num_iter, length(N0));
ber_lm = zeros(num_iter, length(N0));

for k=1:num_iter
    for i=1:length(N0)
        n0 = N0(i);
        data = randi([0 M-1],[2,total_bits/2]);
        rx_pc = precoding(data, M, H1, N0(i));
        rx_zf = zero_forcing(data, M, H1, N0(i));
        rx_lm = linear_mmse(data, M, H1, N0(i));
        ber_pc(k,i) = sum(data ~= rx_pc, "all")/total_bits;
        ber_zf(k,i) = sum(data ~= rx_zf, "all")/total_bits;
        ber_lm(k,i) = sum(data ~= rx_lm, "all")/total_bits;
    end
end

figure;



function rx = precoding(data, M, H, N0)

    x_hat = qammod(data,M,UnitAveragePower=true);

    [U, ~, V] = svd(H);
    x = V*x_hat;

    disp(size(x_hat));
    disp(size(x));

    n = normrnd(0, sqrt(N0/2), size(x_hat)) + 1j*normrnd(0, sqrt(N0/2), size(x_hat));
    y_hat = H*x + n;

    disp(size(y_hat));

    y = U'*y_hat;

    rx = qamdemod(y, M);
end

function rx = zero_forcing(data, M, H, N0)

    x = qammod(data,M,UnitAveragePower=true);
    
    detH = det(H);
    
    if detH == 0
        Hinv = pinv(H);
    else
        Hinv = inv(H);
    end
    
    n = normrnd(0, sqrt(N0/2), size(x)) + 1j*normrnd(0, sqrt(N0/2), size(x));
    
    y = H*x + n;
    x_hat = Hinv*y;
    
    rx = qamdemod(x_hat, M);
end

function rx = linear_mmse(data, M, H, N0)

    x = qammod(data,M,UnitAveragePower=true); % unit average power

    n = normrnd(0, sqrt(N0/2), size(x)) + 1j*normrnd(0, sqrt(N0/2), size(x));
    
    y = H*x + n;

    x_hat = H'*inv((H'*H+(N0*eye(2))))*y;
    
    rx = qamdemod(x_hat, M);
end